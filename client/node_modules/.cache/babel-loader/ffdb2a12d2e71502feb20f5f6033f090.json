{"ast":null,"code":"import _slicedToArray from \"/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport const useFetch = (url, initialValue) => {\n  const _useState = useState(initialValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        result = _useState2[0],\n        setResult = _useState2[1];\n\n  useEffect(() => {\n    fetch(url).then(res => res.json()).then(json => setResult(json));\n  }, [url]);\n  return result;\n};\nexport const useDynamicTransition = ({\n  increment,\n  delay,\n  length\n}) => {\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        idx = _useState4[0],\n        setIdx = _useState4[1];\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIdx(storedIdx => {\n        return (storedIdx + increment) % length;\n      });\n    }, delay);\n    return () => {\n      console.log('remove last interval');\n      clearInterval(interval);\n    };\n  }, [delay, increment]);\n};","map":{"version":3,"sources":["/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/src/hooks.js"],"names":["useState","useEffect","useFetch","url","initialValue","result","setResult","fetch","then","res","json","useDynamicTransition","increment","delay","length","idx","setIdx","interval","setInterval","storedIdx","console","log","clearInterval"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA,oBACfJ,QAAQ,CAAEI,YAAF,CADO;AAAA;AAAA,QACrCC,MADqC;AAAA,QAC7BC,SAD6B;;AAG7CL,EAAAA,SAAS,CAAE,MAAM;AACfM,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAIJ,SAAS,CAACI,IAAD,CAFzB;AAGD,GAJQ,EAIN,CAACP,GAAD,CAJM,CAAT;AAMA,SAAOE,MAAP;AACD,CAVM;AAYP,OAAO,MAAMM,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAD,KAAkC;AAAA,qBAC5Cd,QAAQ,CAAC,CAAD,CADoC;AAAA;AAAA,QAC5De,GAD4D;AAAA,QACvDC,MADuD;;AAGpEf,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMgB,QAAQ,GAAGC,WAAW,CAAE,MAAM;AAClCF,MAAAA,MAAM,CAAEG,SAAS,IAAI;AACnB,eAAO,CAACA,SAAS,GAAGP,SAAb,IAA0BE,MAAjC;AACD,OAFK,CAAN;AAGD,KAJ2B,EAIzBD,KAJyB,CAA5B;AAMA,WAAO,MAAM;AACXO,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAC,MAAAA,aAAa,CAACL,QAAD,CAAb;AACD,KAHD;AAID,GAXQ,EAWN,CAACJ,KAAD,EAAQD,SAAR,CAXM,CAAT;AAYD,CAfM","sourcesContent":["import { useState, useEffect } from 'react'\n\n\nexport const useFetch = (url, initialValue) => {\n  const [ result, setResult ] = useState( initialValue )\n\n  useEffect( () => {\n    fetch(url)\n      .then(res => res.json())\n      .then(json => setResult(json))\n  }, [url])\n\n  return result\n}\n\nexport const useDynamicTransition = ({ increment, delay, length }) => {\n  const [ idx, setIdx ] = useState(0)\n\n  useEffect( () => {\n    const interval = setInterval( () => {\n      setIdx( storedIdx => {\n        return (storedIdx + increment) % length\n      })\n    }, delay)\n\n    return () => {\n      console.log('remove last interval')\n      clearInterval(interval)\n    }\n  }, [delay, increment])\n}\n"]},"metadata":{},"sourceType":"module"}