{"ast":null,"code":"import _slicedToArray from \"/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/src/tasks.js\";\nimport React, { useState } from 'react';\nimport uuid from 'uuid/v4';\nlet i = 0;\n\nfunction Tasks() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        taskText = _useState2[0],\n        setTaskText = _useState2[1];\n\n  let tasks, setTasks, completedTasks, setCompletedtasks;\n\n  if (i % 2 == 0) {\n    var _useState3, _useState4, _useState5, _useState6;\n\n    (_useState3 = useState([]), _useState4 = _slicedToArray(_useState3, 2), tasks = _useState4[0], setTasks = _useState4[1], _useState3)((_useState5 = useState([]), _useState6 = _slicedToArray(_useState5, 2), completedTasks = _useState6[0], setCompletedTasks = _useState6[1], _useState5));\n  } else {\n    var _useState7, _useState8, _useState9, _useState10;\n\n    (_useState7 = useState([]), _useState8 = _slicedToArray(_useState7, 2), completedTasks = _useState8[0], setCompletedTasks = _useState8[1], _useState7)((_useState9 = useState([]), _useState10 = _slicedToArray(_useState9, 2), tasks = _useState10[0], setTasks = _useState10[1], _useState9));\n  }\n\n  i++;\n\n  const updateTaskText = event => {\n    setTaskText(event.target.value);\n  };\n\n  const addTask = () => {\n    setTasks([...tasks, {\n      taskText,\n      id: uuid()\n    }]);\n  };\n\n  const completeTask = completedTask => () => {\n    setCompletedTasks([...completedTasks, completedTask]);\n    setTasks(tasks.filter(task => task.id !== completedTask.id));\n  };\n\n  const deleteTask = task => () => {\n    setCompletedTasks(completedTasks.filter(t => t.id !== task.id));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Tasks\"), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: taskText,\n    onChange: updateTaskText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Add Task\")), React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, tasks.map(task => {\n    const id = task.id,\n          taskText = task.taskText;\n    return React.createElement(\"div\", {\n      key: id,\n      onClick: completeTask(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, taskText);\n  })), React.createElement(\"div\", {\n    className: \"completed-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, completedTasks.map(task => {\n    const id = task.id,\n          taskText = task.taskText;\n    return React.createElement(\"div\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, taskText, \" \", ' ', React.createElement(\"span\", {\n      className: \"delete-task\",\n      onClick: deleteTask(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"x\"));\n  })));\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/src/tasks.js"],"names":["React","useState","uuid","i","Tasks","taskText","setTaskText","tasks","setTasks","completedTasks","setCompletedtasks","setCompletedTasks","updateTaskText","event","target","value","addTask","id","completeTask","completedTask","filter","task","deleteTask","t","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport uuid from 'uuid/v4'\n\nlet i = 0\n\nfunction Tasks(){\n  const [ taskText, setTaskText ] = useState('')\n\n  let tasks, setTasks, completedTasks, setCompletedtasks\n\n  if (i%2==0){\n    ( [tasks, setTasks ] = useState([]) )\n    ( [completedTasks, setCompletedTasks ] = useState([]) )\n  } else {\n    ( [completedTasks, setCompletedTasks ] = useState([]) )\n    ( [tasks, setTasks ] = useState([]) )\n  }\n\n\n\n  i++\n\n  const updateTaskText = event => {\n    setTaskText(event.target.value)\n  }\n\n  const addTask = () => {\n    setTasks([ ...tasks, { taskText, id: uuid() } ])\n  }\n\n  const completeTask = completedTask => () => {\n    setCompletedTasks([ ...completedTasks, completedTask ])\n    setTasks(tasks.filter( task => task.id !== completedTask.id ))\n  }\n\n  const deleteTask = task => () => {\n    setCompletedTasks( completedTasks.filter(t => t.id !== task.id) )\n  }\n\n\n  return (\n    <div>\n      <h3>Tasks</h3>\n      <div className=\"form\">\n        <input type=\"text\"\n          value={ taskText }\n          onChange={ updateTaskText }\n        />\n        <button onClick={ addTask }>Add Task</button>\n      </div>\n      <div className=\"task-list\">\n        {\n          tasks.map(task => {\n            const { id, taskText } = task\n            return (\n              <div key={id}\n                onClick={ completeTask(task) }>\n                { taskText }\n              </div>\n            )\n          })\n        }\n      </div>\n      <div className=\"completed-list\">\n        {\n          completedTasks.map( task => {\n            const { id, taskText } = task\n\n            return (\n              <div key={id}>\n                { taskText } {' '}\n                <span className=\"delete-task\"\n                  onClick={ deleteTask(task) }>x</span>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}