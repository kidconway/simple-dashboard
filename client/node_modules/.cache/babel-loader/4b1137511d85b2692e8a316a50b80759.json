{"ast":null,"code":"import _slicedToArray from \"/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/src/tasks.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport uuid from 'uuid/v4';\nconst initialTaskState = {\n  tasks: [],\n  completedTasks: []\n};\n\nconst tasksReducer = () => {\n  return initialTaskState;\n};\n\nconst TASKS_STORAGE_KEY = 'TASKS_STORAGE_KEY';\n\nconst storeTasks = taskMap => {\n  localStorage.setItem(TASKS_STORAGE_KEY, JSON.stringify(taskMap));\n}; // Utilizes local storage for previous tasks\n\n\nconst readStoredTasks = () => {\n  const tasksMap = JSON.parse(localStorage.getItem(TASKS_STORAGE_KEY));\n  return tasksMap ? tasksMap : {\n    tasks: [],\n    completedTasks: []\n  };\n};\n\nfunction Tasks() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        taskText = _useState2[0],\n        setTaskText = _useState2[1];\n\n  const storedTasks = readStoredTasks();\n\n  const _useState3 = useState(storedTasks.tasks),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tasks = _useState4[0],\n        setTasks = _useState4[1];\n\n  const _useState5 = useState(storedTasks.completedTasks),\n        _useState6 = _slicedToArray(_useState5, 2),\n        completedTasks = _useState6[0],\n        setCompletedTasks = _useState6[1];\n\n  const _useReducer = useReducer(tasksReducer),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  console.log('state', state);\n  useEffect(() => {\n    storeTasks({\n      tasks,\n      completedTasks\n    });\n  });\n\n  const updateTaskText = event => {\n    setTaskText(event.target.value);\n  };\n\n  const addTask = () => {\n    setTasks([...tasks, {\n      taskText,\n      id: uuid()\n    }]);\n  };\n\n  const completeTask = completedTask => () => {\n    setCompletedTasks([...completedTasks, completedTask]);\n    setTasks(tasks.filter(task => task.id !== completedTask.id));\n  };\n\n  const deleteTask = task => () => {\n    setCompletedTasks(completedTasks.filter(t => t.id !== task.id));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Tasks\"), React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: taskText,\n    onChange: updateTaskText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Add Task\")), React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, tasks.map(task => {\n    const id = task.id,\n          taskText = task.taskText;\n    return React.createElement(\"div\", {\n      key: id,\n      onClick: completeTask(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, taskText);\n  })), React.createElement(\"div\", {\n    className: \"completed-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, completedTasks.map(task => {\n    const id = task.id,\n          taskText = task.taskText;\n    return React.createElement(\"div\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, taskText, \" \", ' ', React.createElement(\"span\", {\n      className: \"delete-task\",\n      onClick: deleteTask(task),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"x\"));\n  })));\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/clementine/Desktop/Code-Bits/ReactJS/dashboard/client/src/tasks.js"],"names":["React","useState","useEffect","useReducer","uuid","initialTaskState","tasks","completedTasks","tasksReducer","TASKS_STORAGE_KEY","storeTasks","taskMap","localStorage","setItem","JSON","stringify","readStoredTasks","tasksMap","parse","getItem","Tasks","taskText","setTaskText","storedTasks","setTasks","setCompletedTasks","state","dispatch","console","log","updateTaskText","event","target","value","addTask","id","completeTask","completedTask","filter","task","deleteTask","t","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react'\nimport uuid from 'uuid/v4'\n\nconst initialTaskState = {\n  tasks: [],\n  completedTasks: []\n}\n\nconst tasksReducer = () => {\n  return initialTaskState\n}\n\nconst TASKS_STORAGE_KEY = 'TASKS_STORAGE_KEY'\n\nconst storeTasks = taskMap => {\n  localStorage.setItem(\n    TASKS_STORAGE_KEY,\n    JSON.stringify( taskMap )\n  )\n}\n\n// Utilizes local storage for previous tasks\nconst readStoredTasks = () => {\n  const tasksMap = JSON.parse(localStorage.getItem( TASKS_STORAGE_KEY ))\n\n  return tasksMap ? tasksMap : { tasks: [], completedTasks: [] }\n}\n\nfunction Tasks(){\n  const [ taskText, setTaskText ] = useState('')\n  const storedTasks = readStoredTasks()\n  const [ tasks, setTasks ] = useState(storedTasks.tasks)\n  const [ completedTasks, setCompletedTasks ] = useState( storedTasks.completedTasks )\n\n  const [ state, dispatch ] = useReducer(tasksReducer)\n\n  console.log('state', state)\n\n  useEffect( () => {\n    storeTasks({ tasks, completedTasks })\n  })\n\n  const updateTaskText = event => {\n    setTaskText(event.target.value)\n  }\n\n  const addTask = () => {\n    setTasks([ ...tasks, { taskText, id: uuid() } ])\n  }\n\n  const completeTask = completedTask => () => {\n    setCompletedTasks([ ...completedTasks, completedTask ])\n    setTasks(tasks.filter( task => task.id !== completedTask.id ))\n  }\n\n  const deleteTask = task => () => {\n    setCompletedTasks( completedTasks.filter(t => t.id !== task.id) )\n  }\n\n\n  return (\n    <div>\n      <h3>Tasks</h3>\n      <div className=\"form\">\n        <input type=\"text\"\n          value={ taskText }\n          onChange={ updateTaskText }\n        />\n        <button onClick={ addTask }>Add Task</button>\n      </div>\n      <div className=\"task-list\">\n        {\n          tasks.map(task => {\n            const { id, taskText } = task\n            return (\n              <div key={id}\n                onClick={ completeTask(task) }>\n                { taskText }\n              </div>\n            )\n          })\n        }\n      </div>\n      <div className=\"completed-list\">\n        {\n          completedTasks.map( task => {\n            const { id, taskText } = task\n\n            return (\n              <div key={id}>\n                { taskText } {' '}\n                <span className=\"delete-task\"\n                  onClick={ deleteTask(task) }>x</span>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}